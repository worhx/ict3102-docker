{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Beng Hian\\\\Desktop\\\\DOCKER to git\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Beng Hian\\\\Desktop\\\\DOCKER to git\\\\react\\\\src\\\\Player.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        {\\n            YOLO{\\n                label\\n                topleft{\\n                    x\\n                    y\\n                }\\n            }\\n        }\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst Players = () => React.createElement(Query, {\n  query: gql(_templateObject()),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading ...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Error :(\");\n  console.log(data);\n  return data.YOLO.map(({\n    label,\n    confidence\n  }) => React.createElement(\"div\", {\n    key: confidence,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, label)));\n});\n\nexport default Players;","map":{"version":3,"sources":["C:/Users/Beng Hian/Desktop/DOCKER to git/react/src/Player.js"],"names":["React","Query","gql","Players","loading","error","data","console","log","YOLO","map","label","confidence"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,OAAO,GAAG,MACZ,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAED,GAAF,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWK,CAAC;AAACE,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AACzB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOA,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAc,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,KACjB;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAJ,CADJ,CADG,CAAP;AAKH,CApBL,CADJ;;AAwBA,eAAeR,OAAf","sourcesContent":["import React from 'react';\nimport {Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst Players = () => (\n    <Query query={gql`\n        {\n            YOLO{\n                label\n                topleft{\n                    x\n                    y\n                }\n            }\n        }\n    `}>\n        {({loading, error, data}) => {\n            if (loading) return <p>Loading ...</p>;\n            if (error) return <p>Error :(</p>;\n            console.log(data);\n            return data.YOLO.map(({label, confidence}) => (\n                <div key={confidence}>\n                    <p>{label}</p>\n                </div>\n            ))\n        }}\n    </Query>\n);\nexport default Players;"]},"metadata":{},"sourceType":"module"}