{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Beng Hian\\\\Desktop\\\\DOCKER to git\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Beng Hian\\\\Desktop\\\\DOCKER to git\\\\react\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport Cover from './components/Cover';\nimport BgImage from './scenebg.jpg';\nimport axios from 'axios'; // import FileUpload from './components/FileUpload';\n\nimport Player from './Player';\nimport { ApolloProvider } from 'react-apollo'; // import { Line } from 'react-lineto';\n\nimport Shape from './components/Shape';\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/api'\n});\n\nconst App = () => {\n  // this.state = {\n  //   //  test: \"asd\"\n  //   //  ListOfRect: {}\n  // };\n  // updateList = res => this.setState({ListOfRect: {res}})\n  const _useState = useState('Drop Here'),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        preview = _useState4[0],\n        setPreview = _useState4[1];\n\n  const doNothing = event => event.preventDefault();\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        percentage = _useState6[0],\n        setPercentage = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        enableDragDrop = _useState8[0],\n        setEnableDragDrop = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        stateXhr = _useState10[0],\n        setStateXhr = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        listOfRect = _useState12[0],\n        setListOfRect = _useState12[1]; // const [listOfRect, setListOfRect] = useState([{label: \"Clock\", topleft: {x: 123, y: 321}, bottomright: {x: 234, y: 567}}]);\n  // {'label': 'traffic light', 'confidence': 0.46783975, 'topleft': {'x': 297, 'y': 83}, 'bottomright': {'x': 317, 'y': 122}}\n\n\n  const onDragEnter = event => {\n    console.log(event);\n\n    if (enableDragDrop) {\n      setStatus('File Detected');\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  const onDragLeave = event => {\n    if (enableDragDrop) {\n      setStatus('Drop Here');\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const onDragOver = event => {\n    if (enableDragDrop) {\n      setStatus('Drop');\n    }\n\n    event.preventDefault();\n  };\n\n  const onDrop = event => {\n    const supportedFilesTypes = ['image/jpeg', 'image/png'];\n    const type = event.dataTransfer.files[0].type;\n\n    if (supportedFilesTypes.indexOf(type) > -1 && enableDragDrop) {\n      // Begin Reading File\n      const reader = new FileReader();\n\n      reader.onload = e => setPreview(e.target.result);\n\n      reader.readAsDataURL(event.dataTransfer.files[0]); // Create Form Data\n\n      const payload = new FormData();\n      payload.append('file', event.dataTransfer.files[0]);\n      fetch('http://localhost:1800/api/yolo', {\n        method: 'POST',\n        body: payload\n      }).then(response => {\n        response.text().then(body => {\n          const convert_to_proper_json_format = body.replace(/'/g, '\"');\n          const json_object = JSON.parse(convert_to_proper_json_format);\n          setListOfRect(Array.from(json_object));\n          setStatus('Results Below');\n          setEnableDragDrop(true); // this.setState({ imageURL: `http://localhost:5000/${body.file}` });\n        });\n      }); // XHR - New XHR Request\n      // const xhr = new XMLHttpRequest();\n      //             // XHR - Upload Progress\n      //             xhr.upload.onprogress = (e) => {\n      //               const done = e.position || e.loaded\n      //               const total = e.totalSize || e.total;\n      //               const perc = (Math.floor(done/total*1000)/10);\n      //               if (perc >= 100) {\n      //                   setStatus('Done');\n      //                   setEnableDragDrop(true);\n      //                                       // Delayed reset\n      //                   setTimeout(() => {\n      //                     setPreview(null);\n      //                     setStatus('Drop Here');\n      //                     setPercentage(0);\n      //                     setEnableDragDrop(true);\n      //                   }, 750); // To match the transition 500 / 250\n      //               } else {\n      //                   setStatus(`${perc}%`);\n      //               }\n      //               setPercentage(perc); \n      //           };\n      // // XHR - Make Request  \n      // xhr.open('POST', 'http://localhost:1800/api/yolo');\n      // xhr.send(payload);\n      // console.log(xhr.response);\n      // setStateXhr(xhr);\n\n      setEnableDragDrop(false);\n    }\n\n    event.preventDefault();\n  };\n\n  const onAbortClick = () => {\n    stateXhr.abort();\n    setPreview(null);\n    setStatus('Drop Here');\n    setPercentage(0);\n    setEnableDragDrop(true);\n  }; // const test = React.createElement(Rectangle, {corner: [430, 160], height: 500, width: 1000, color: '#ff8f00'})\n\n\n  const SHAPES = [// {label: \"Clock\", cornerleft: 402, cornertop: 131, height: 72, width:85},\n    // {label: \"Car\", cornerleft: 200, cornertop: 380, height: 500, width:1000},\n    // {label: \"Another Car\", cornerleft: 100, cornertop: 290, height: 500, width:200},\n    // [[430, 160], 500, 1000], \n  ];\n  const testData = {\n    \"data\": \"[{'label': 'truck', 'confidence': 0.29664555, 'topleft': {'x': 40, 'y': 56}, 'bottomright': {'x': 72, 'y': 73}}, {'label': 'car', 'confidence': 0.1504619, 'topleft': {'x': 34, 'y': 62}, 'bottomright': {'x': 122, 'y': 160}}, {'label': 'truck', 'confidence': 0.17571694, 'topleft': {'x': 69, 'y': 54}, 'bottomright': {'x': 125, 'y': 84}}, {'label': 'truck', 'confidence': 0.16826874, 'topleft': {'x': 126, 'y': 61}, 'bottomright': {'x': 149, 'y': 74}}, {'label': 'truck', 'confidence': 0.46485534, 'topleft': {'x': 17, 'y': 40}, 'bottomright': {'x': 205, 'y': 164}}]\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Cover, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ImagePreview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      backgroundImage: \"url(\".concat(BgImage, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"App\",\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDragOver: doNothing,\n    onDrop: onDragLeave,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"DropArea \".concat(status === 'Drop' ? 'Over' : '', \" \").concat(status.indexOf('%') > -1 || status === 'Done' ? 'Uploading' : ''),\n    onDragOver: onDragOver,\n    onDragLeave: onDragEnter,\n    onDrop: onDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ImageProgress \".concat(preview ? 'Show' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ImageProgressImage\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ImageProgressUploaded\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\"),\n      clipPath: \"inset(\".concat(100 - Number(percentage), \"% 0 0 0)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Status \".concat(status.indexOf('%') > -1 || status === 'Done' ? 'Uploading' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, status), status.indexOf('%') > -1 && React.createElement(\"div\", {\n    className: \"Abort\",\n    onClick: onAbortClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"\\xD7\")))), React.createElement(\"div\", {\n    className: \"centerRectangle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), listOfRect.map(shape => React.createElement(Shape, {\n    label: shape.label,\n    cornerleft: shape.topleft.x,\n    cornertop: shape.topleft.y,\n    height: shape.bottomright.y - shape.topleft.y,\n    width: shape.bottomright.x - shape.topleft.x,\n    key: shape.label + shape.topleft.x,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))));\n};\n\nexport default App; // {this.state.ListOfRect.map(shape => (\n//   <Shape label={shape.label} cornerleft={shape.topleft.x} cornertop={shape.topleft.y} height={shape.bottomright.y-shape.topleft.y} width={shape.bottomright.x-shape.topleft.x} key={shape.label+shape.topleft.x}/>\n// ))}\n// const App = () => (\n//   <ApolloProvider client={client}>\n//     <div>\n//       <Player/>\n//     </div>\n//   </ApolloProvider>\n// )\n// export default App;","map":{"version":3,"sources":["C:/Users/Beng Hian/Desktop/DOCKER to git/react/src/App.js"],"names":["React","useState","ApolloClient","Cover","BgImage","axios","Player","ApolloProvider","Shape","client","uri","App","status","setStatus","preview","setPreview","doNothing","event","preventDefault","percentage","setPercentage","enableDragDrop","setEnableDragDrop","stateXhr","setStateXhr","listOfRect","setListOfRect","onDragEnter","console","log","stopPropagation","onDragLeave","onDragOver","onDrop","supportedFilesTypes","type","dataTransfer","files","indexOf","reader","FileReader","onload","e","target","result","readAsDataURL","payload","FormData","append","fetch","method","body","then","response","text","convert_to_proper_json_format","replace","json_object","JSON","parse","Array","from","onAbortClick","abort","SHAPES","testData","backgroundImage","clipPath","Number","map","shape","label","topleft","x","y","bottomright"],"mappings":"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","sourcesContent":["import React, { useState }from \"react\";\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport Cover from './components/Cover'\nimport BgImage from './scenebg.jpg';\nimport axios from 'axios';\n// import FileUpload from './components/FileUpload';\nimport Player from './Player';\nimport { ApolloProvider } from 'react-apollo';\n// import { Line } from 'react-lineto';\nimport Shape from './components/Shape'\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/api'\n});\n\nconst App = () => {\n\n  // this.state = {\n  //   //  test: \"asd\"\n  //   //  ListOfRect: {}\n  // };\n\n  // updateList = res => this.setState({ListOfRect: {res}})\n\n\n  const [status, setStatus] = useState('Drop Here');\n  const [preview, setPreview] = useState(null);\n  const doNothing = event => event.preventDefault();\n  const [percentage, setPercentage] = useState(0);\n  const [enableDragDrop, setEnableDragDrop] = useState(true);\n\n  const [stateXhr, setStateXhr] = useState(null);\n\n  const [listOfRect, setListOfRect] = useState([]);\n\n  // const [listOfRect, setListOfRect] = useState([{label: \"Clock\", topleft: {x: 123, y: 321}, bottomright: {x: 234, y: 567}}]);\n// {'label': 'traffic light', 'confidence': 0.46783975, 'topleft': {'x': 297, 'y': 83}, 'bottomright': {'x': 317, 'y': 122}}\n\n\n  const onDragEnter = event => {\n    console.log(event);\n    if (enableDragDrop) {\n      setStatus('File Detected');\n  }\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  const onDragLeave = event => {\n    if (enableDragDrop) {\n      setStatus('Drop Here');\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  const onDragOver = event => {\n    if (enableDragDrop) {\n      setStatus('Drop');\n    }\n    event.preventDefault();\n}\n\n  const onDrop = event => {\n    const supportedFilesTypes = ['image/jpeg', 'image/png'];\n    const { type } = event.dataTransfer.files[0];\n    if (supportedFilesTypes.indexOf(type) > -1 && enableDragDrop) {\n      // Begin Reading File\n        const reader = new FileReader();\n        reader.onload = e => setPreview(e.target.result);\n        reader.readAsDataURL(event.dataTransfer.files[0]);\n\n        // Create Form Data\n        const payload = new FormData();\n        payload.append('file', event.dataTransfer.files[0]);\n        fetch('http://localhost:1800/api/yolo', {\n          \t\t\tmethod: 'POST',\n          \t\t\tbody: payload\n              })\n              .then(response => {\n          \t\t\tresponse.text().then(body => {\n                  const convert_to_proper_json_format = body.replace(/'/g, '\"');\n                  const json_object = JSON.parse(convert_to_proper_json_format);\n\n                  setListOfRect(Array.from(json_object));\n\n                  setStatus('Results Below');\n                  setEnableDragDrop(true);\n          \t\t\t\t// this.setState({ imageURL: `http://localhost:5000/${body.file}` });\n          \t\t\t});\n          \t\t});\n        // XHR - New XHR Request\n        // const xhr = new XMLHttpRequest();\n        \n        //             // XHR - Upload Progress\n        //             xhr.upload.onprogress = (e) => {\n        //               const done = e.position || e.loaded\n        //               const total = e.totalSize || e.total;\n        //               const perc = (Math.floor(done/total*1000)/10);\n        //               if (perc >= 100) {\n        //                   setStatus('Done');\n        //                   setEnableDragDrop(true);\n\n        //                                       // Delayed reset\n        //                   setTimeout(() => {\n        //                     setPreview(null);\n        //                     setStatus('Drop Here');\n        //                     setPercentage(0);\n        //                     setEnableDragDrop(true);\n        //                   }, 750); // To match the transition 500 / 250\n\n        //               } else {\n        //                   setStatus(`${perc}%`);\n        //               }\n        //               setPercentage(perc); \n        //           };\n\n        // // XHR - Make Request  \n        // xhr.open('POST', 'http://localhost:1800/api/yolo');\n        // xhr.send(payload);\n        \n        // console.log(xhr.response);\n        // setStateXhr(xhr);\n        setEnableDragDrop(false);\n    }\n    \n    event.preventDefault();\n  }\n\n  const onAbortClick = () => {\n    stateXhr.abort();\n    setPreview(null);\n    setStatus('Drop Here');\n    setPercentage(0);\n    setEnableDragDrop(true);\n};\n\n  // const test = React.createElement(Rectangle, {corner: [430, 160], height: 500, width: 1000, color: '#ff8f00'})\n  const SHAPES = [\n    // {label: \"Clock\", cornerleft: 402, cornertop: 131, height: 72, width:85},\n    // {label: \"Car\", cornerleft: 200, cornertop: 380, height: 500, width:1000},\n    // {label: \"Another Car\", cornerleft: 100, cornertop: 290, height: 500, width:200},\n\n    // [[430, 160], 500, 1000], \n  ]\n\n  const testData = \n    {\"data\": \"[{'label': 'truck', 'confidence': 0.29664555, 'topleft': {'x': 40, 'y': 56}, 'bottomright': {'x': 72, 'y': 73}}, {'label': 'car', 'confidence': 0.1504619, 'topleft': {'x': 34, 'y': 62}, 'bottomright': {'x': 122, 'y': 160}}, {'label': 'truck', 'confidence': 0.17571694, 'topleft': {'x': 69, 'y': 54}, 'bottomright': {'x': 125, 'y': 84}}, {'label': 'truck', 'confidence': 0.16826874, 'topleft': {'x': 126, 'y': 61}, 'bottomright': {'x': 149, 'y': 74}}, {'label': 'truck', 'confidence': 0.46485534, 'topleft': {'x': 17, 'y': 40}, 'bottomright': {'x': 205, 'y': 164}}]\"}\n  \n\n  return (\n    <div>\n    <div>\n      <Cover/>\n    <div className=\"ImagePreview\">\n                <div style={{ backgroundImage: `url(${BgImage})` }} />\n            </div>\n    </div>\n<div className=\"App\" onDragEnter={onDragEnter} onDragLeave={onDragLeave} onDragOver={doNothing} onDrop={onDragLeave}>\n     {/* <div className={`ImagePreview ${preview ? 'Show' : ''}`}>\n          <div style={{ backgroundImage: `url(${preview})` }}></div>\n     </div> */}\n     <div className={`DropArea ${status === 'Drop' ? 'Over' : ''} ${status.indexOf('%') > -1 || status === 'Done' ? 'Uploading' : ''}`} onDragOver={onDragOver} onDragLeave={onDragEnter} onDrop={onDrop}><div className={`ImageProgress ${preview ? 'Show' : ''}`}>\n              <div className=\"ImageProgressImage\" style={{ backgroundImage: `url(${preview})` }}></div>\n              <div className=\"ImageProgressUploaded\" style={{ backgroundImage: `url(${preview})`, clipPath: `inset(${100 - Number(percentage)}% 0 0 0)`}}></div>\n           </div>\n           <div className={`Status ${status.indexOf('%') > -1 || status === 'Done' ? 'Uploading' : ''}`}>{status}</div>\n           {status.indexOf('%') > -1 && <div className=\"Abort\" onClick={onAbortClick}><span>&times;</span></div>}\n      </div>\n</div>\n\n{/* <FileUpload/> */}\n  <div className=\"centerRectangle\">\n  <img src={preview}/>\n  {/* <img className=\"centerImage\" src={preview}/> */}\n      {listOfRect.map(shape => (\n        <Shape label={shape.label} cornerleft={shape.topleft.x} cornertop={shape.topleft.y} height={shape.bottomright.y-shape.topleft.y} width={shape.bottomright.x-shape.topleft.x} key={shape.label+shape.topleft.x}/>\n      ))}\n  </div>\n{/* <Shape/> */}\n</div>\n  );\n};\nexport default App;\n\n// {this.state.ListOfRect.map(shape => (\n//   <Shape label={shape.label} cornerleft={shape.topleft.x} cornertop={shape.topleft.y} height={shape.bottomright.y-shape.topleft.y} width={shape.bottomright.x-shape.topleft.x} key={shape.label+shape.topleft.x}/>\n// ))}\n\n// const App = () => (\n  \n//   <ApolloProvider client={client}>\n//     <div>\n//       <Player/>\n//     </div>\n//   </ApolloProvider>\n  \n// )\n// export default App;\n"]},"metadata":{},"sourceType":"module"}